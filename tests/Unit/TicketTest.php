<?php

namespace Tests\Unit;

use App\Models\Ticket;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;
use function Laravel\Prompts\error;

class TicketTest extends TestCase
{


    /**
     * A basic unit test example.
     */
    public function test_schedule_create_ticket(): void
    {
        $ticket = Ticket::factory()->raw();
        $newId = DB::table('ticket')->insertGetId($ticket);
        $dbTicket = DB::table('ticket')->where('id', $newId)->get()->first();
        $this->assertTrue(!!$dbTicket);
    }

    public function test_schedule_process_ticket() {
        $ticket = new Ticket();
        $youngestUnprocessedTicket = DB::table('ticket')
            ->whereIn('status', [false])
            ->orderBy('created_at', 'ASC')
            ->limit(1)
            ->first();
        assert(!!$youngestUnprocessedTicket);
        $ticket->processTicket();
        $newlyProcessedTicket = DB::table('ticket')
            ->whereIn('status', [true])
            ->orderBy('updated_at', 'DESC')
            ->get()
            ->first();

        // Check we found a new processed ticket
        $this->assertTrue(!!$newlyProcessedTicket);

        // check the ticket we processed is equal to the most recently processed ticket
        $this->assertEquals($youngestUnprocessedTicket->id, $newlyProcessedTicket->id);

        // Check the updated stamps are different
        $this->assertTrue(strtotime($youngestUnprocessedTicket->updated_at) <
            strtotime($newlyProcessedTicket->updated_at));
    }
}
